org: inventory1
app: inventory
service: inventory
# frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  environment:
    S3_BUCKET_NAME: inventory--images
    DYNAMO_ENDPOINT: ${self:custom.dynamo.endpoint}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
        - dynamodb:*
        - dynamodb:CreateTable
      Resource:
        - arn:aws:s3:::inventory--images/*
        - arn:aws:dynamodb:us-west-2:851725605966:table/*

functions:
  inventoryStor:
    handler: dist/server.handler
    timeout: 30 
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - Authorization
              - X-Amz-key
              - X-Amz-Date
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer

plugins:
  - serverless-offline

resources:
  Resources:
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: CognitoAuthorizer
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - arn:aws:cognito-idp:us-west-2:851725605966:userpool/us-west-2_b4m20SjRA

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Orders
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    NotificationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Notifications
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    HistoricalStocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HistoricalStocks
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET_NAME}

custom:
  dynamo:
    endpoint: http://localhost:8000 # إذا كنت تستخدم DynamoDB Local
  userPoolId: us-west-2_b4m20SjRA
